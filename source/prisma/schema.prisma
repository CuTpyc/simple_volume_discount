// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Shop {
  id        Int      @id @default(autoincrement())
  shop      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  funells Funells[]
}

model Funells {
  id            Int             @id @default(autoincrement())
  shopId        Int
  title         String
  createdAt     DateTime        @default(now())
  shop          Shop            @relation(fields: [shopId], references: [id], onDelete: Cascade)
  products      Products[]
  FunellsVolume FunellsVolume[]
}

model Products {
  id        Int      @id @default(autoincrement())
  shopId    Int
  funellId  Int
  shopifyId String   @unique
  title     String
  handle    String
  createdAt DateTime @default(now())
  funells   Funells  @relation(fields: [funellId], references: [id], onDelete: Cascade)
}

model FunellsVolume {
  id           Int      @id @default(autoincrement())
  shopId       Int
  funellId     Int
  volume       Int
  discount     Int
  createdAt    DateTime @default(now())
  funellsValue Funells  @relation(fields: [funellId], references: [id], onDelete: Cascade)
}
